---
title: Church-Turing Thesis
categories: Computation
icon: /img/icons/binary-tree.png
...

<section class="primary">

# Summary

The Church-Turing Thesis is merely a formalization on what an algorithm means. Namely, nothing will be considered an algorithm
if it cannot be rendered as a Turing machine guaranteed to halt on all inputs. Likewise, any Turing machine that does halt on 
all inputs is called an algorithm. This definition is incredibly important, as it allows us to consider the question of
what is and isn't computable- that is, we shouldn't work on finding an algorithm to a problem if it can be proven no
Turing machine can be constructed to solve it.

</section>

<section class="primary">

# See Also

- [Turing Machines](turing_machines)
- [Universal Turing Machines](universal_turing_machines)

</section>

<section class="primary">

# Notes

- Papadimitriou & Lewis (1998). Elements of the Theory of Computation (2nd ed.). Prentice-Hall. ISBN 0-13-262478-8

</section>